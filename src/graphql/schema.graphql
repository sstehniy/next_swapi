type Planet {
	name: String
	diameter: Int
	rotation_period: Int
	orbital_period: Int
	gravity: Float
	population: Int
	climate: String
	terrain: String
	surface_water: Int
	residents: [People]!
	films: [Film]!
	url: String!
	images(first: Boolean): [String]!
}

type Specie {
	name: String
	classification: String
	designation: String
	eye_colors: String
	hair_colors: String
	skin_colors: String
	language: String
	average_height: Float
	average_lifespan: Int
	homeworld: Planet
	people: [People]!
	films: [Film]!
	url: String!
	images(first: Boolean): [String]!
}

type Vehicle {
	vehicle_class: String
	name: String
	model: String
	manufacturer: String
	length: Int
	crew: String
	max_atmosphering_speed: Int
	passengers: String
	cargo_capacity: Int
	consumables: String
	films: [Film]!
	pilots: [People]!
	url: String!
	cost_in_credits: Int
	images(first: Boolean): [String]!
}

type Starship {
	starship_class: String
	hyperdrive_rating: Int
	MGLT: Int
	name: String
	model: String
	manufacturer: String
	length: Int
	crew: String
	max_atmosphering_speed: Int
	passengers: String
	cargo_capacity: Int
	consumables: String
	films: [Film]!
	pilots: [People]!
	url: String!
	cost_in_credits: Int
	images(first: Boolean): [String]!
}

type Film {
	title: String
	episode_id: Int
	opening_crawl: String
	director: String
	producer: String
	release_date: String
	species: [Specie]!
	starships: [Starship]!
	vehicles: [Vehicle]!
	characters: [People]!
	planets: [Planet]!
	url: String!
	images(first: Boolean): [String]!
}

type People {
	birth_year: String
	eye_color: String
	films: [Film]!
	gender: String
	hair_color: String
	height: Int
	homeworld: Planet
	mass: Int
	name: String
	skin_color: String
	species: [Specie]!
	starships: [Starship]!
	vehicles: [Vehicle]!
	images(first: Boolean): [String]!
}

union All = People | Film | Starship | Vehicle | Specie | Planet

type PageInfo {
	hasNextPage: Boolean
}

type AllResponse {
	pageInfo: PageInfo
	data: [All]!
}

type PeopleResponse {
	pageInfo: PageInfo
	data: [People]!
}

type FilmsResponse {
	pageInfo: PageInfo
	data: [Film]!
}

type StarhipsResponse {
	pageInfo: PageInfo
	data: [Starship]!
}

type VehiclesResponse {
	pageInfo: PageInfo
	data: [Vehicle]!
}

type SpeciesResponse {
	pageInfo: PageInfo
	data: [Specie]!
}

type PlanetsResposne {
	pageInfo: PageInfo
	data: [Planet]!
}

type Query {
	getAll(keyword: String, limit: Int, offset: Int): AllResponse!
	getPeople(
		keyword: String
		name: String
		limit: Int
		offset: Int
	): PeopleResponse!
	getFilms(
		keyword: String
		title: String
		limit: Int
		offset: Int
	): FilmsResponse!
	getStarships(
		keyword: String
		name: String
		limit: Int
		offset: Int
	): StarhipsResponse!
	getVehicles(
		keyword: String
		name: String
		limit: Int
		offset: Int
	): VehiclesResponse!
	getSpecies(
		keyword: String
		name: String
		limit: Int
		offset: Int
	): SpeciesResponse!
	getPlanets(
		keyword: String
		name: String
		limit: Int
		offset: Int
	): PlanetsResposne!
}
